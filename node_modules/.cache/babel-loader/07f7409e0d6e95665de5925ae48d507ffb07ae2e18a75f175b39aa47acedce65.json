{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WesleyGomes\\\\Downloads\\\\EcotBot\\\\client\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, IconButton, Paper, Typography, List, ListItem, ListItemText, Avatar, Chip, Fade, Zoom, CircularProgress, Divider, Tooltip } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport io from 'socket.io-client';\n\n// Sugestões rápidas predefinidas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUICK_SUGGESTIONS = [\"Como reduzir consumo de energia?\", \"Dicas para economizar armazenamento\", \"Como diminuir emissões de carbono?\", \"Explique o impacto do email\", \"Práticas de Green IT\", \"Otimização de processos digitais\"];\n\n// Respostas pré-prontas para consultas comuns\nconst PRE_DEFINED_RESPONSES = {\n  \"como reduzir consumo de energia\": \"Para reduzir o consumo de energia, você pode implementar as seguintes medidas:\\n\\n1. Configure dispositivos para modo de economia de energia\\n2. Desligue sistemas quando não estiverem em uso\\n3. Utilize servidores virtualizados para otimizar recursos\\n4. Implemente políticas de desligamento automático\\n5. Migre para soluções em nuvem mais eficientes\",\n  \"dicas para economizar armazenamento\": \"Para economizar armazenamento digital:\\n\\n1. Elimine arquivos duplicados com ferramentas automatizadas\\n2. Arquive dados antigos em storages de menor custo\\n3. Implemente políticas de retenção de dados\\n4. Compacte arquivos quando possível\\n5. Utilize formatos de arquivo otimizados\",\n  \"como diminuir emissões de carbono\": \"Para diminuir emissões de carbono digital:\\n\\n1. Migre para provedores de nuvem com compromisso de energia renovável\\n2. Otimize os algoritmos para maior eficiência\\n3. Implemente práticas de desenvolvimento de código limpo\\n4. Reduza transferência de dados desnecessária\\n5. Monitore e estabeleça metas de redução de emissões\",\n  \"explique o impacto do email\": \"O impacto ambiental do email:\\n\\n1. Cada email gera em média 4g de CO2\\n2. Emails com anexos podem gerar até 50g de CO2\\n3. Um funcionário médio envia/recebe ~120 emails por dia\\n4. Uma empresa de 100 pessoas pode gerar ~24 toneladas de CO2/ano só com emails\\n5. Reduzir emails desnecessários e usar links em vez de anexos diminui significativamente esse impacto\",\n  \"práticas de green it\": \"Melhores práticas de Green IT:\\n\\n1. Otimize o ciclo de vida dos equipamentos de TI\\n2. Implemente políticas de impressão sustentáveis\\n3. Utilize fontes de energia renovável para data centers\\n4. Adote práticas de desenvolvimento sustentável\\n5. Monitore e estabeleça metas para redução de pegada de carbono\\n6. Priorize fornecedores com compromissos ambientais\",\n  \"otimização de processos digitais\": \"Para otimizar processos digitais de forma sustentável:\\n\\n1. Automatize fluxos de trabalho para reduzir redundâncias\\n2. Implemente análise de dados para identificar ineficiências\\n3. Reduza transferências desnecessárias de dados\\n4. Utilize edge computing para processamento local quando viável\\n5. Otimize consultas de banco de dados e armazenamento\\n6. Considere o impacto energético no design de novos sistemas\"\n};\n\n// Mensagem de boas-vindas do bot\nconst WELCOME_MESSAGE = \"Olá! Sou o EcoBot, seu assistente para sustentabilidade digital. Como posso ajudar você hoje?\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: WELCOME_MESSAGE,\n    isBot: true\n  }]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const socket = useRef();\n  const inputRef = useRef(null);\n  useEffect(() => {\n    socket.current = io('http://localhost:5000');\n    socket.current.on('chat response', response => {\n      setIsTyping(false);\n      setMessages(prev => [...prev, {\n        text: response,\n        isBot: true\n      }]);\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const getPreDefinedResponse = message => {\n    const normalizedMessage = message.toLowerCase().trim();\n\n    // Verificar correspondências exatas\n    if (PRE_DEFINED_RESPONSES[normalizedMessage]) {\n      return PRE_DEFINED_RESPONSES[normalizedMessage];\n    }\n\n    // Verificar correspondências parciais\n    for (const key of Object.keys(PRE_DEFINED_RESPONSES)) {\n      if (normalizedMessage.includes(key) || key.includes(normalizedMessage)) {\n        return PRE_DEFINED_RESPONSES[key];\n      }\n    }\n    return null;\n  };\n  const handleSend = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    if (input.trim()) {\n      const userMessage = input;\n      setMessages(prev => [...prev, {\n        text: userMessage,\n        isBot: false\n      }]);\n      setInput('');\n\n      // Verifica se existe uma resposta pré-definida\n      const preDefinedResponse = getPreDefinedResponse(userMessage);\n      if (preDefinedResponse) {\n        // Se existe uma resposta pré-definida, usar ela diretamente (sem efeito de digitação)\n        setTimeout(() => {\n          setMessages(prev => [...prev, {\n            text: preDefinedResponse,\n            isBot: true\n          }]);\n        }, 200); // Reduzido para resposta quase imediata\n      } else {\n        // Se não existe, mostrar efeito de digitação brevemente e enviar para o backend\n        setIsTyping(true);\n        setTimeout(() => {\n          setIsTyping(false);\n          socket.current.emit('chat message', userMessage);\n        }, 300); // Reduzido significativamente\n      }\n\n      // Foco no input após enviar mensagem\n      setTimeout(() => {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 50);\n    }\n  };\n  const handleQuickSuggestion = suggestion => {\n    setInput(suggestion);\n    setTimeout(() => {\n      handleSend();\n    }, 50); // Resposta mais rápida\n  };\n  const handleReset = () => {\n    setMessages([{\n      text: WELCOME_MESSAGE,\n      isBot: true\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        p: 2,\n        borderBottom: '1px solid',\n        borderColor: 'divider',\n        bgcolor: 'primary.light',\n        color: 'primary.contrastText',\n        borderRadius: '16px 16px 0 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: 'white',\n            mr: 1,\n            width: 32,\n            height: 32,\n            color: 'primary.main'\n          },\n          children: /*#__PURE__*/_jsxDEV(SmartToyIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"EcoBot Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Reiniciar conversa\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleReset,\n          size: \"small\",\n          sx: {\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        flexGrow: 1,\n        overflow: 'auto',\n        p: 2,\n        bgcolor: 'background.default',\n        borderRadius: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          timeout: 200,\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            disableGutters: true,\n            sx: {\n              justifyContent: message.isBot ? 'flex-start' : 'flex-end',\n              mb: 1.5\n            },\n            children: [message.isBot && /*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: 'primary.main',\n                mr: 1,\n                width: 32,\n                height: 32\n              },\n              children: /*#__PURE__*/_jsxDEV(SmartToyIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              sx: {\n                p: 1.5,\n                maxWidth: '75%',\n                bgcolor: message.isBot ? 'primary.light' : 'secondary.light',\n                color: message.isBot ? 'primary.contrastText' : 'secondary.contrastText',\n                borderRadius: message.isBot ? '0 12px 12px 12px' : '12px 0 12px 12px',\n                wordBreak: 'break-word'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                style: {\n                  whiteSpace: 'pre-line'\n                },\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), !message.isBot && /*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: 'secondary.main',\n                ml: 1,\n                width: 32,\n                height: 32\n              },\n              children: /*#__PURE__*/_jsxDEV(PersonIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          timeout: 150,\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            disableGutters: true,\n            sx: {\n              justifyContent: 'flex-start',\n              mb: 1.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: 'primary.main',\n                mr: 1,\n                width: 32,\n                height: 32\n              },\n              children: /*#__PURE__*/_jsxDEV(SmartToyIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              sx: {\n                p: 1.5,\n                bgcolor: 'primary.light',\n                color: 'primary.contrastText',\n                borderRadius: '0 12px 12px 12px',\n                minWidth: 100,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 16,\n                  color: \"inherit\",\n                  sx: {\n                    opacity: 0.7\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    ml: 1\n                  },\n                  children: \"Digitando...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        borderTop: '1px solid',\n        borderColor: 'divider'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mb: 1,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(LightbulbIcon, {\n          fontSize: \"small\",\n          sx: {\n            mr: 0.5,\n            color: 'warning.main'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), \"Sugest\\xF5es r\\xE1pidas:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 1,\n          mb: 2\n        },\n        children: QUICK_SUGGESTIONS.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: suggestion,\n          onClick: () => handleQuickSuggestion(suggestion),\n          variant: \"outlined\",\n          color: \"primary\",\n          size: \"small\",\n          sx: {\n            borderRadius: '16px',\n            '&:hover': {\n              bgcolor: 'primary.light',\n              color: 'primary.contrastText'\n            },\n            transition: 'all 0.2s ease'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSend,\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          size: \"small\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Digite sua mensagem...\",\n          variant: \"outlined\",\n          inputRef: inputRef,\n          autoComplete: \"off\",\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              borderRadius: '24px',\n              '&.Mui-focused fieldset': {\n                borderColor: 'primary.main',\n                borderWidth: '2px'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          type: \"submit\",\n          color: \"primary\",\n          disabled: !input.trim(),\n          sx: {\n            bgcolor: 'primary.main',\n            color: 'white',\n            '&:hover': {\n              bgcolor: 'primary.dark'\n            },\n            '&.Mui-disabled': {\n              bgcolor: 'action.disabledBackground',\n              color: 'action.disabled'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"WnTwjrlMZYDSw18ijgJM1dmK07Y=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","IconButton","Paper","Typography","List","ListItem","ListItemText","Avatar","Chip","Fade","Zoom","CircularProgress","Divider","Tooltip","SendIcon","SmartToyIcon","PersonIcon","LightbulbIcon","RestartAltIcon","io","jsxDEV","_jsxDEV","QUICK_SUGGESTIONS","PRE_DEFINED_RESPONSES","WELCOME_MESSAGE","ChatBot","_s","messages","setMessages","text","isBot","input","setInput","isTyping","setIsTyping","messagesEndRef","socket","inputRef","current","on","response","prev","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","getPreDefinedResponse","message","normalizedMessage","toLowerCase","trim","key","Object","keys","includes","handleSend","e","preventDefault","userMessage","preDefinedResponse","setTimeout","emit","_inputRef$current","focus","handleQuickSuggestion","suggestion","handleReset","sx","height","display","flexDirection","children","justifyContent","alignItems","p","borderBottom","borderColor","bgcolor","color","borderRadius","mr","width","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","title","onClick","size","elevation","flexGrow","overflow","map","index","in","timeout","disableGutters","mb","maxWidth","wordBreak","style","whiteSpace","ml","minWidth","opacity","ref","borderTop","flexWrap","gap","label","transition","component","onSubmit","fullWidth","value","onChange","target","placeholder","autoComplete","borderWidth","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/WesleyGomes/Downloads/EcotBot/client/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Box, \r\n  TextField, \r\n  IconButton, \r\n  Paper, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Fade,\r\n  Zoom,\r\n  CircularProgress,\r\n  Divider,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\nimport io from 'socket.io-client';\r\n\r\n// Sugestões rápidas predefinidas\r\nconst QUICK_SUGGESTIONS = [\r\n  \"Como reduzir consumo de energia?\",\r\n  \"Dicas para economizar armazenamento\",\r\n  \"Como diminuir emissões de carbono?\",\r\n  \"Explique o impacto do email\",\r\n  \"Práticas de Green IT\",\r\n  \"Otimização de processos digitais\"\r\n];\r\n\r\n// Respostas pré-prontas para consultas comuns\r\nconst PRE_DEFINED_RESPONSES = {\r\n  \"como reduzir consumo de energia\": \"Para reduzir o consumo de energia, você pode implementar as seguintes medidas:\\n\\n1. Configure dispositivos para modo de economia de energia\\n2. Desligue sistemas quando não estiverem em uso\\n3. Utilize servidores virtualizados para otimizar recursos\\n4. Implemente políticas de desligamento automático\\n5. Migre para soluções em nuvem mais eficientes\",\r\n  \r\n  \"dicas para economizar armazenamento\": \"Para economizar armazenamento digital:\\n\\n1. Elimine arquivos duplicados com ferramentas automatizadas\\n2. Arquive dados antigos em storages de menor custo\\n3. Implemente políticas de retenção de dados\\n4. Compacte arquivos quando possível\\n5. Utilize formatos de arquivo otimizados\",\r\n  \r\n  \"como diminuir emissões de carbono\": \"Para diminuir emissões de carbono digital:\\n\\n1. Migre para provedores de nuvem com compromisso de energia renovável\\n2. Otimize os algoritmos para maior eficiência\\n3. Implemente práticas de desenvolvimento de código limpo\\n4. Reduza transferência de dados desnecessária\\n5. Monitore e estabeleça metas de redução de emissões\",\r\n  \r\n  \"explique o impacto do email\": \"O impacto ambiental do email:\\n\\n1. Cada email gera em média 4g de CO2\\n2. Emails com anexos podem gerar até 50g de CO2\\n3. Um funcionário médio envia/recebe ~120 emails por dia\\n4. Uma empresa de 100 pessoas pode gerar ~24 toneladas de CO2/ano só com emails\\n5. Reduzir emails desnecessários e usar links em vez de anexos diminui significativamente esse impacto\",\r\n  \r\n  \"práticas de green it\": \"Melhores práticas de Green IT:\\n\\n1. Otimize o ciclo de vida dos equipamentos de TI\\n2. Implemente políticas de impressão sustentáveis\\n3. Utilize fontes de energia renovável para data centers\\n4. Adote práticas de desenvolvimento sustentável\\n5. Monitore e estabeleça metas para redução de pegada de carbono\\n6. Priorize fornecedores com compromissos ambientais\",\r\n  \r\n  \"otimização de processos digitais\": \"Para otimizar processos digitais de forma sustentável:\\n\\n1. Automatize fluxos de trabalho para reduzir redundâncias\\n2. Implemente análise de dados para identificar ineficiências\\n3. Reduza transferências desnecessárias de dados\\n4. Utilize edge computing para processamento local quando viável\\n5. Otimize consultas de banco de dados e armazenamento\\n6. Considere o impacto energético no design de novos sistemas\"\r\n};\r\n\r\n// Mensagem de boas-vindas do bot\r\nconst WELCOME_MESSAGE = \"Olá! Sou o EcoBot, seu assistente para sustentabilidade digital. Como posso ajudar você hoje?\";\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: WELCOME_MESSAGE, isBot: true }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const socket = useRef();\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io('http://localhost:5000');\r\n\r\n    socket.current.on('chat response', (response) => {\r\n      setIsTyping(false);\r\n      setMessages((prev) => [...prev, { text: response, isBot: true }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const getPreDefinedResponse = (message) => {\r\n    const normalizedMessage = message.toLowerCase().trim();\r\n    \r\n    // Verificar correspondências exatas\r\n    if (PRE_DEFINED_RESPONSES[normalizedMessage]) {\r\n      return PRE_DEFINED_RESPONSES[normalizedMessage];\r\n    }\r\n    \r\n    // Verificar correspondências parciais\r\n    for (const key of Object.keys(PRE_DEFINED_RESPONSES)) {\r\n      if (normalizedMessage.includes(key) || key.includes(normalizedMessage)) {\r\n        return PRE_DEFINED_RESPONSES[key];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const handleSend = (e) => {\r\n    e?.preventDefault();\r\n    if (input.trim()) {\r\n      const userMessage = input;\r\n      setMessages((prev) => [...prev, { text: userMessage, isBot: false }]);\r\n      setInput('');\r\n      \r\n      // Verifica se existe uma resposta pré-definida\r\n      const preDefinedResponse = getPreDefinedResponse(userMessage);\r\n      \r\n      if (preDefinedResponse) {\r\n        // Se existe uma resposta pré-definida, usar ela diretamente (sem efeito de digitação)\r\n        setTimeout(() => {\r\n          setMessages((prev) => [...prev, { text: preDefinedResponse, isBot: true }]);\r\n        }, 200); // Reduzido para resposta quase imediata\r\n      } else {\r\n        // Se não existe, mostrar efeito de digitação brevemente e enviar para o backend\r\n        setIsTyping(true);\r\n        setTimeout(() => {\r\n          setIsTyping(false);\r\n          socket.current.emit('chat message', userMessage);\r\n        }, 300); // Reduzido significativamente\r\n      }\r\n      \r\n      // Foco no input após enviar mensagem\r\n      setTimeout(() => {\r\n        inputRef.current?.focus();\r\n      }, 50);\r\n    }\r\n  };\r\n  \r\n  const handleQuickSuggestion = (suggestion) => {\r\n    setInput(suggestion);\r\n    setTimeout(() => {\r\n      handleSend();\r\n    }, 50); // Resposta mais rápida\r\n  };\r\n  \r\n  const handleReset = () => {\r\n    setMessages([{ text: WELCOME_MESSAGE, isBot: true }]);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Box sx={{ \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        p: 2,\r\n        borderBottom: '1px solid',\r\n        borderColor: 'divider',\r\n        bgcolor: 'primary.light',\r\n        color: 'primary.contrastText',\r\n        borderRadius: '16px 16px 0 0'\r\n      }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Avatar \r\n            sx={{ \r\n              bgcolor: 'white', \r\n              mr: 1,\r\n              width: 32,\r\n              height: 32,\r\n              color: 'primary.main'\r\n            }}\r\n          >\r\n            <SmartToyIcon fontSize=\"small\" />\r\n          </Avatar>\r\n          <Typography variant=\"h6\">\r\n            EcoBot Assistant\r\n          </Typography>\r\n        </Box>\r\n        <Tooltip title=\"Reiniciar conversa\">\r\n          <IconButton \r\n            onClick={handleReset}\r\n            size=\"small\"\r\n            sx={{ color: 'white' }}\r\n          >\r\n            <RestartAltIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      \r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          flexGrow: 1,\r\n          overflow: 'auto',\r\n          p: 2,\r\n          bgcolor: 'background.default',\r\n          borderRadius: 0,\r\n        }}\r\n      >\r\n        <List>\r\n          {messages.map((message, index) => (\r\n            <Fade in={true} key={index} timeout={200}>\r\n              <ListItem\r\n                disableGutters\r\n                sx={{\r\n                  justifyContent: message.isBot ? 'flex-start' : 'flex-end',\r\n                  mb: 1.5,\r\n                }}\r\n              >\r\n                {message.isBot && (\r\n                  <Avatar \r\n                    sx={{ \r\n                      bgcolor: 'primary.main', \r\n                      mr: 1,\r\n                      width: 32,\r\n                      height: 32\r\n                    }}\r\n                  >\r\n                    <SmartToyIcon fontSize=\"small\" />\r\n                  </Avatar>\r\n                )}\r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 1.5,\r\n                    maxWidth: '75%',\r\n                    bgcolor: message.isBot ? 'primary.light' : 'secondary.light',\r\n                    color: message.isBot ? 'primary.contrastText' : 'secondary.contrastText',\r\n                    borderRadius: message.isBot ? '0 12px 12px 12px' : '12px 0 12px 12px',\r\n                    wordBreak: 'break-word',\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" style={{ whiteSpace: 'pre-line' }}>\r\n                    {message.text}\r\n                  </Typography>\r\n                </Paper>\r\n                {!message.isBot && (\r\n                  <Avatar \r\n                    sx={{ \r\n                      bgcolor: 'secondary.main', \r\n                      ml: 1,\r\n                      width: 32,\r\n                      height: 32\r\n                    }}\r\n                  >\r\n                    <PersonIcon fontSize=\"small\" />\r\n                  </Avatar>\r\n                )}\r\n              </ListItem>\r\n            </Fade>\r\n          ))}\r\n          \r\n          {isTyping && (\r\n            <Fade in={true} timeout={150}>\r\n              <ListItem\r\n                disableGutters\r\n                sx={{\r\n                  justifyContent: 'flex-start',\r\n                  mb: 1.5,\r\n                }}\r\n              >\r\n                <Avatar \r\n                  sx={{ \r\n                    bgcolor: 'primary.main', \r\n                    mr: 1,\r\n                    width: 32,\r\n                    height: 32\r\n                  }}\r\n                >\r\n                  <SmartToyIcon fontSize=\"small\" />\r\n                </Avatar>\r\n                <Paper\r\n                  elevation={0}\r\n                  sx={{\r\n                    p: 1.5,\r\n                    bgcolor: 'primary.light',\r\n                    color: 'primary.contrastText',\r\n                    borderRadius: '0 12px 12px 12px',\r\n                    minWidth: 100,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                  }}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <CircularProgress size={16} color=\"inherit\" sx={{ opacity: 0.7 }} />\r\n                    <Typography variant=\"body2\" sx={{ ml: 1 }}>\r\n                      Digitando...\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </ListItem>\r\n            </Fade>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </List>\r\n      </Paper>\r\n\r\n      <Box sx={{ p: 2, borderTop: '1px solid', borderColor: 'divider' }}>\r\n        <Typography variant=\"body2\" sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\r\n          <LightbulbIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'warning.main' }} />\r\n          Sugestões rápidas:\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\r\n          {QUICK_SUGGESTIONS.map((suggestion, index) => (\r\n            <Chip \r\n              key={index}\r\n              label={suggestion} \r\n              onClick={() => handleQuickSuggestion(suggestion)}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              sx={{ \r\n                borderRadius: '16px',\r\n                '&:hover': {\r\n                  bgcolor: 'primary.light',\r\n                  color: 'primary.contrastText',\r\n                },\r\n                transition: 'all 0.2s ease'\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n\r\n        <Box component=\"form\" onSubmit={handleSend} sx={{ display: 'flex', gap: 1 }}>\r\n          <TextField\r\n            fullWidth\r\n            size=\"small\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Digite sua mensagem...\"\r\n            variant=\"outlined\"\r\n            inputRef={inputRef}\r\n            autoComplete=\"off\"\r\n            sx={{\r\n              '& .MuiOutlinedInput-root': {\r\n                borderRadius: '24px',\r\n                '&.Mui-focused fieldset': {\r\n                  borderColor: 'primary.main',\r\n                  borderWidth: '2px'\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <IconButton \r\n            type=\"submit\" \r\n            color=\"primary\"\r\n            disabled={!input.trim()}\r\n            sx={{ \r\n              bgcolor: 'primary.main',\r\n              color: 'white',\r\n              '&:hover': {\r\n                bgcolor: 'primary.dark',\r\n              },\r\n              '&.Mui-disabled': {\r\n                bgcolor: 'action.disabledBackground',\r\n                color: 'action.disabled'\r\n              }\r\n            }}\r\n          >\r\n            <SendIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}