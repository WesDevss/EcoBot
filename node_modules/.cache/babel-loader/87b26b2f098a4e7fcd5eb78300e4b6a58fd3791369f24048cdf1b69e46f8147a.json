{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WesleyGomes\\\\Downloads\\\\EcotBot\\\\client\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, IconButton, Paper, Typography, List, ListItem, ListItemText, Avatar, Chip, Fade, Zoom, CircularProgress, Divider, Tooltip } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport io from 'socket.io-client';\n\n// Sugestões rápidas predefinidas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUICK_SUGGESTIONS = [\"Como reduzir consumo de energia?\", \"Dicas para economizar armazenamento\", \"Como diminuir emissões de carbono?\", \"Práticas de Green IT\", \"Impacto ambiental da IA\"];\n\n// Respostas pré-prontas para consultas comuns\nconst PRE_DEFINED_RESPONSES = {\n  \"como reduzir consumo de energia\": \"Para reduzir o consumo de energia:\\n\\n1. Configure dispositivos para modo de economia\\n2. Desligue sistemas quando não em uso\\n3. Utilize servidores virtualizados\\n4. Implemente desligamento automático\\n5. Migre para nuvem eficiente\",\n  \"dicas para economizar armazenamento\": \"Para economizar armazenamento:\\n\\n1. Elimine arquivos duplicados\\n2. Arquive dados antigos\\n3. Implemente políticas de retenção\\n4. Compacte arquivos\\n5. Use formatos otimizados\",\n  \"como diminuir emissões de carbono\": \"Para diminuir emissões de carbono:\\n\\n1. Use provedores com energia renovável\\n2. Otimize algoritmos\\n3. Implemente código limpo\\n4. Reduza transferências desnecessárias\\n5. Estabeleça metas de redução\",\n  \"explique o impacto do email\": \"Impacto do email:\\n\\n1. Cada email: ~4g de CO2\\n2. Emails com anexos: até 50g de CO2\\n3. Média diária: 120 emails por pessoa\\n4. Use links em vez de anexos\\n5. Elimine emails desnecessários\",\n  \"práticas de green it\": \"Práticas de Green IT:\\n\\n1. Otimize ciclo de vida dos equipamentos\\n2. Use energia renovável\\n3. Implemente políticas sustentáveis\\n4. Monitore consumo energético\\n5. Priorize fornecedores ecológicos\",\n  \"otimização de processos digitais\": \"Otimização de processos:\\n\\n1. Automatize fluxos de trabalho\\n2. Reduza transferências de dados\\n3. Use edge computing quando viável\\n4. Otimize consultas de banco de dados\\n5. Considere impacto energético\",\n  \"impacto ambiental da ia\": \"Impacto da IA:\\n\\n1. Modelos grandes: alta emissão de CO2\\n2. Use modelos pré-treinados\\n3. Otimize algoritmos\\n4. Priorize nuvens sustentáveis\\n5. Treine em horários de baixa demanda\",\n  \"ciclo de vida de equipamentos\": \"Ciclo de vida sustentável:\\n\\n1. Estenda vida útil com manutenção\\n2. Recondicionamento de equipamentos\\n3. Descarte responsável certificado\\n4. Política BYOD para reduzir compras\\n5. Priorize fabricantes sustentáveis\",\n  \"data centers sustentáveis\": \"Data centers sustentáveis:\\n\\n1. Refrigeração eficiente\\n2. Energia renovável\\n3. Virtualização de servidores\\n4. Otimize PUE\\n5. Reutilize calor residual\"\n};\n\n// Keywords para melhorar a correspondência das consultas\nconst RESPONSE_KEYWORDS = {\n  \"energia\": \"como reduzir consumo de energia\",\n  \"consumo\": \"como reduzir consumo de energia\",\n  \"power\": \"como reduzir consumo de energia\",\n  \"armazenamento\": \"dicas para economizar armazenamento\",\n  \"storage\": \"dicas para economizar armazenamento\",\n  \"disco\": \"dicas para economizar armazenamento\",\n  \"arquivos\": \"dicas para economizar armazenamento\",\n  \"carbono\": \"como diminuir emissões de carbono\",\n  \"co2\": \"como diminuir emissões de carbono\",\n  \"emissões\": \"como diminuir emissões de carbono\",\n  \"pegada\": \"como diminuir emissões de carbono\",\n  \"email\": \"explique o impacto do email\",\n  \"mensagens\": \"explique o impacto do email\",\n  \"correio\": \"explique o impacto do email\",\n  \"green it\": \"práticas de green it\",\n  \"ti verde\": \"práticas de green it\",\n  \"sustentável\": \"práticas de green it\",\n  \"processos\": \"otimização de processos digitais\",\n  \"workflow\": \"otimização de processos digitais\",\n  \"fluxo\": \"otimização de processos digitais\",\n  \"ia\": \"impacto ambiental da ia\",\n  \"inteligência artificial\": \"impacto ambiental da ia\",\n  \"machine learning\": \"impacto ambiental da ia\",\n  \"ai\": \"impacto ambiental da ia\",\n  \"equipamentos\": \"ciclo de vida de equipamentos\",\n  \"hardware\": \"ciclo de vida de equipamentos\",\n  \"dispositivos\": \"ciclo de vida de equipamentos\",\n  \"computadores\": \"ciclo de vida de equipamentos\",\n  \"data center\": \"data centers sustentáveis\",\n  \"datacenter\": \"data centers sustentáveis\",\n  \"servidor\": \"data centers sustentáveis\",\n  \"nuvem\": \"data centers sustentáveis\",\n  \"cloud\": \"data centers sustentáveis\"\n};\n\n// Mensagem de boas-vindas do bot\nconst WELCOME_MESSAGE = \"Olá! Sou o EcoBot, seu assistente para sustentabilidade digital. Como posso ajudar você hoje?\";\nconst ChatBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: WELCOME_MESSAGE,\n    isBot: true\n  }]);\n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const socket = useRef();\n  const inputRef = useRef(null);\n  useEffect(() => {\n    socket.current = io('http://localhost:5000');\n    socket.current.on('chat response', response => {\n      setIsTyping(false);\n      setMessages(prev => [...prev, {\n        text: response,\n        isBot: true\n      }]);\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const getPreDefinedResponse = message => {\n    const normalizedMessage = message.toLowerCase().trim();\n\n    // Verificar correspondências exatas\n    if (PRE_DEFINED_RESPONSES[normalizedMessage]) {\n      return PRE_DEFINED_RESPONSES[normalizedMessage];\n    }\n\n    // Verificar por keywords\n    for (const [keyword, responseKey] of Object.entries(RESPONSE_KEYWORDS)) {\n      if (normalizedMessage.includes(keyword)) {\n        return PRE_DEFINED_RESPONSES[responseKey];\n      }\n    }\n\n    // Verificar correspondências parciais\n    for (const key of Object.keys(PRE_DEFINED_RESPONSES)) {\n      if (normalizedMessage.includes(key) || key.includes(normalizedMessage)) {\n        return PRE_DEFINED_RESPONSES[key];\n      }\n    }\n    return null;\n  };\n  const handleSend = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    if (input.trim()) {\n      const userMessage = input;\n      setMessages(prev => [...prev, {\n        text: userMessage,\n        isBot: false\n      }]);\n      setInput('');\n\n      // Verifica se existe uma resposta pré-definida\n      const preDefinedResponse = getPreDefinedResponse(userMessage);\n      if (preDefinedResponse) {\n        // Se existe uma resposta pré-definida, usar ela diretamente (sem efeito de digitação)\n        setMessages(prev => [...prev, {\n          text: preDefinedResponse,\n          isBot: true\n        }]);\n      } else {\n        // Se não existe, mostrar efeito de digitação por um tempo mínimo e enviar para o backend\n        setIsTyping(true);\n        setTimeout(() => {\n          setIsTyping(false);\n          socket.current.emit('chat message', userMessage);\n        }, 100); // Tempo drasticamente reduzido para melhor experiência\n      }\n\n      // Foco no input após enviar mensagem\n      setTimeout(() => {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }, 10);\n    }\n  };\n  const handleQuickSuggestion = suggestion => {\n    setInput(suggestion);\n    // Usar setTimeout para garantir que o navegador atualize o estado corretamente\n    setTimeout(() => {\n      handleSend();\n    }, 10);\n  };\n  const handleReset = () => {\n    setMessages([{\n      text: WELCOME_MESSAGE,\n      isBot: true\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      borderRadius: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        bgcolor: 'primary.dark',\n        color: 'primary.contrastText',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: \"/ecobot-logo.png\",\n          alt: \"EcoBot Logo\",\n          sx: {\n            height: 40,\n            width: 'auto',\n            objectFit: 'contain',\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Reiniciar conversa\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: handleReset,\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        p: 3,\n        bgcolor: '#f8f8f8'\n      },\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Zoom, {\n        in: true,\n        style: {\n          transitionDelay: '0ms',\n          transitionDuration: '50ms'\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            justifyContent: message.isBot ? 'flex-start' : 'flex-end',\n            mb: 2.5\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: message.isBot ? 'row' : 'row-reverse',\n              alignItems: 'flex-start',\n              maxWidth: '90%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: message.isBot ? 'primary.dark' : 'secondary.dark',\n                width: 42,\n                height: 42,\n                mr: message.isBot ? 1.5 : 0,\n                ml: message.isBot ? 0 : 1.5\n              },\n              children: message.isBot ? /*#__PURE__*/_jsxDEV(SmartToyIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 36\n              }, this) : /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 55\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              sx: {\n                p: 2.5,\n                borderRadius: 3,\n                bgcolor: message.isBot ? 'white' : '#00695c',\n                color: message.isBot ? 'text.primary' : 'white',\n                whiteSpace: 'pre-wrap',\n                boxShadow: 3,\n                border: message.isBot ? '1px solid #e0e0e0' : 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  fontSize: '1.2rem',\n                  lineHeight: 1.8,\n                  fontWeight: 500,\n                  letterSpacing: '0.01em'\n                },\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(Fade, {\n        in: isTyping,\n        timeout: 50,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            justifyContent: 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              maxWidth: '90%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                bgcolor: 'primary.dark',\n                width: 42,\n                height: 42,\n                mr: 1.5\n              },\n              children: /*#__PURE__*/_jsxDEV(SmartToyIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 3,\n              sx: {\n                p: 2.5,\n                borderRadius: 3,\n                border: '1px solid #e0e0e0'\n              },\n              children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 28,\n                thickness: 4\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2.5,\n        bgcolor: 'white',\n        borderTop: '1px solid #e0e0e0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2,\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 1\n        },\n        children: QUICK_SUGGESTIONS.map((suggestion, index) => /*#__PURE__*/_jsxDEV(Chip, {\n          label: suggestion,\n          clickable: true,\n          color: \"primary\",\n          variant: \"filled\",\n          onClick: () => handleQuickSuggestion(suggestion),\n          icon: /*#__PURE__*/_jsxDEV(LightbulbIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 21\n          }, this),\n          sx: {\n            '&:hover': {\n              bgcolor: 'primary.dark',\n              color: 'white'\n            },\n            fontSize: '1rem',\n            height: 42,\n            borderRadius: 4,\n            mb: 1,\n            fontWeight: 600,\n            color: 'white',\n            bgcolor: 'primary.main',\n            maxWidth: '100%',\n            '& .MuiChip-label': {\n              overflow: 'visible',\n              whiteSpace: 'normal',\n              textAlign: 'left',\n              display: 'block',\n              paddingLeft: 1,\n              paddingRight: 1\n            }\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSend,\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          placeholder: \"Pergunte sobre sustentabilidade digital...\",\n          variant: \"outlined\",\n          size: \"medium\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          inputRef: inputRef,\n          autoFocus: true,\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              borderRadius: 3,\n              fontSize: '1.1rem',\n              backgroundColor: '#f8f8f8'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          type: \"submit\",\n          sx: {\n            ml: 1.5,\n            width: 54,\n            height: 54,\n            bgcolor: 'primary.main',\n            color: 'white',\n            '&:hover': {\n              bgcolor: 'primary.dark'\n            },\n            '&.Mui-disabled': {\n              bgcolor: 'grey.300',\n              color: 'grey.500'\n            }\n          },\n          disabled: !input.trim(),\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {\n            fontSize: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"WnTwjrlMZYDSw18ijgJM1dmK07Y=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","IconButton","Paper","Typography","List","ListItem","ListItemText","Avatar","Chip","Fade","Zoom","CircularProgress","Divider","Tooltip","SendIcon","SmartToyIcon","PersonIcon","LightbulbIcon","RestartAltIcon","io","jsxDEV","_jsxDEV","QUICK_SUGGESTIONS","PRE_DEFINED_RESPONSES","RESPONSE_KEYWORDS","WELCOME_MESSAGE","ChatBot","_s","messages","setMessages","text","isBot","input","setInput","isTyping","setIsTyping","messagesEndRef","socket","inputRef","current","on","response","prev","disconnect","_messagesEndRef$curre","scrollIntoView","behavior","getPreDefinedResponse","message","normalizedMessage","toLowerCase","trim","keyword","responseKey","Object","entries","includes","key","keys","handleSend","e","preventDefault","userMessage","preDefinedResponse","setTimeout","emit","_inputRef$current","focus","handleQuickSuggestion","suggestion","handleReset","elevation","sx","height","display","flexDirection","overflow","borderRadius","children","p","bgcolor","color","justifyContent","alignItems","component","src","alt","width","objectFit","mr","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","size","flex","map","index","in","style","transitionDelay","transitionDuration","mb","maxWidth","ml","whiteSpace","boxShadow","border","variant","fontSize","lineHeight","fontWeight","letterSpacing","timeout","thickness","ref","borderTop","flexWrap","gap","label","clickable","icon","textAlign","paddingLeft","paddingRight","onSubmit","fullWidth","placeholder","value","onChange","target","autoFocus","backgroundColor","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/WesleyGomes/Downloads/EcotBot/client/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Box, \r\n  TextField, \r\n  IconButton, \r\n  Paper, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  Fade,\r\n  Zoom,\r\n  CircularProgress,\r\n  Divider,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\nimport io from 'socket.io-client';\r\n\r\n// Sugestões rápidas predefinidas\r\nconst QUICK_SUGGESTIONS = [\r\n  \"Como reduzir consumo de energia?\",\r\n  \"Dicas para economizar armazenamento\",\r\n  \"Como diminuir emissões de carbono?\",\r\n  \"Práticas de Green IT\",\r\n  \"Impacto ambiental da IA\"\r\n];\r\n\r\n// Respostas pré-prontas para consultas comuns\r\nconst PRE_DEFINED_RESPONSES = {\r\n  \"como reduzir consumo de energia\": \"Para reduzir o consumo de energia:\\n\\n1. Configure dispositivos para modo de economia\\n2. Desligue sistemas quando não em uso\\n3. Utilize servidores virtualizados\\n4. Implemente desligamento automático\\n5. Migre para nuvem eficiente\",\r\n  \r\n  \"dicas para economizar armazenamento\": \"Para economizar armazenamento:\\n\\n1. Elimine arquivos duplicados\\n2. Arquive dados antigos\\n3. Implemente políticas de retenção\\n4. Compacte arquivos\\n5. Use formatos otimizados\",\r\n  \r\n  \"como diminuir emissões de carbono\": \"Para diminuir emissões de carbono:\\n\\n1. Use provedores com energia renovável\\n2. Otimize algoritmos\\n3. Implemente código limpo\\n4. Reduza transferências desnecessárias\\n5. Estabeleça metas de redução\",\r\n  \r\n  \"explique o impacto do email\": \"Impacto do email:\\n\\n1. Cada email: ~4g de CO2\\n2. Emails com anexos: até 50g de CO2\\n3. Média diária: 120 emails por pessoa\\n4. Use links em vez de anexos\\n5. Elimine emails desnecessários\",\r\n  \r\n  \"práticas de green it\": \"Práticas de Green IT:\\n\\n1. Otimize ciclo de vida dos equipamentos\\n2. Use energia renovável\\n3. Implemente políticas sustentáveis\\n4. Monitore consumo energético\\n5. Priorize fornecedores ecológicos\",\r\n  \r\n  \"otimização de processos digitais\": \"Otimização de processos:\\n\\n1. Automatize fluxos de trabalho\\n2. Reduza transferências de dados\\n3. Use edge computing quando viável\\n4. Otimize consultas de banco de dados\\n5. Considere impacto energético\",\r\n  \r\n  \"impacto ambiental da ia\": \"Impacto da IA:\\n\\n1. Modelos grandes: alta emissão de CO2\\n2. Use modelos pré-treinados\\n3. Otimize algoritmos\\n4. Priorize nuvens sustentáveis\\n5. Treine em horários de baixa demanda\",\r\n  \r\n  \"ciclo de vida de equipamentos\": \"Ciclo de vida sustentável:\\n\\n1. Estenda vida útil com manutenção\\n2. Recondicionamento de equipamentos\\n3. Descarte responsável certificado\\n4. Política BYOD para reduzir compras\\n5. Priorize fabricantes sustentáveis\",\r\n  \r\n  \"data centers sustentáveis\": \"Data centers sustentáveis:\\n\\n1. Refrigeração eficiente\\n2. Energia renovável\\n3. Virtualização de servidores\\n4. Otimize PUE\\n5. Reutilize calor residual\"\r\n};\r\n\r\n// Keywords para melhorar a correspondência das consultas\r\nconst RESPONSE_KEYWORDS = {\r\n  \"energia\": \"como reduzir consumo de energia\",\r\n  \"consumo\": \"como reduzir consumo de energia\",\r\n  \"power\": \"como reduzir consumo de energia\",\r\n  \r\n  \"armazenamento\": \"dicas para economizar armazenamento\",\r\n  \"storage\": \"dicas para economizar armazenamento\",\r\n  \"disco\": \"dicas para economizar armazenamento\",\r\n  \"arquivos\": \"dicas para economizar armazenamento\",\r\n  \r\n  \"carbono\": \"como diminuir emissões de carbono\",\r\n  \"co2\": \"como diminuir emissões de carbono\",\r\n  \"emissões\": \"como diminuir emissões de carbono\",\r\n  \"pegada\": \"como diminuir emissões de carbono\",\r\n  \r\n  \"email\": \"explique o impacto do email\",\r\n  \"mensagens\": \"explique o impacto do email\",\r\n  \"correio\": \"explique o impacto do email\",\r\n  \r\n  \"green it\": \"práticas de green it\",\r\n  \"ti verde\": \"práticas de green it\",\r\n  \"sustentável\": \"práticas de green it\",\r\n  \r\n  \"processos\": \"otimização de processos digitais\",\r\n  \"workflow\": \"otimização de processos digitais\",\r\n  \"fluxo\": \"otimização de processos digitais\",\r\n  \r\n  \"ia\": \"impacto ambiental da ia\",\r\n  \"inteligência artificial\": \"impacto ambiental da ia\",\r\n  \"machine learning\": \"impacto ambiental da ia\",\r\n  \"ai\": \"impacto ambiental da ia\",\r\n  \r\n  \"equipamentos\": \"ciclo de vida de equipamentos\",\r\n  \"hardware\": \"ciclo de vida de equipamentos\",\r\n  \"dispositivos\": \"ciclo de vida de equipamentos\",\r\n  \"computadores\": \"ciclo de vida de equipamentos\",\r\n  \r\n  \"data center\": \"data centers sustentáveis\",\r\n  \"datacenter\": \"data centers sustentáveis\",\r\n  \"servidor\": \"data centers sustentáveis\",\r\n  \"nuvem\": \"data centers sustentáveis\",\r\n  \"cloud\": \"data centers sustentáveis\"\r\n};\r\n\r\n// Mensagem de boas-vindas do bot\r\nconst WELCOME_MESSAGE = \"Olá! Sou o EcoBot, seu assistente para sustentabilidade digital. Como posso ajudar você hoje?\";\r\n\r\nconst ChatBot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: WELCOME_MESSAGE, isBot: true }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const socket = useRef();\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = io('http://localhost:5000');\r\n\r\n    socket.current.on('chat response', (response) => {\r\n      setIsTyping(false);\r\n      setMessages((prev) => [...prev, { text: response, isBot: true }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.current.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const getPreDefinedResponse = (message) => {\r\n    const normalizedMessage = message.toLowerCase().trim();\r\n    \r\n    // Verificar correspondências exatas\r\n    if (PRE_DEFINED_RESPONSES[normalizedMessage]) {\r\n      return PRE_DEFINED_RESPONSES[normalizedMessage];\r\n    }\r\n    \r\n    // Verificar por keywords\r\n    for (const [keyword, responseKey] of Object.entries(RESPONSE_KEYWORDS)) {\r\n      if (normalizedMessage.includes(keyword)) {\r\n        return PRE_DEFINED_RESPONSES[responseKey];\r\n      }\r\n    }\r\n    \r\n    // Verificar correspondências parciais\r\n    for (const key of Object.keys(PRE_DEFINED_RESPONSES)) {\r\n      if (normalizedMessage.includes(key) || key.includes(normalizedMessage)) {\r\n        return PRE_DEFINED_RESPONSES[key];\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const handleSend = (e) => {\r\n    e?.preventDefault();\r\n    if (input.trim()) {\r\n      const userMessage = input;\r\n      setMessages((prev) => [...prev, { text: userMessage, isBot: false }]);\r\n      setInput('');\r\n      \r\n      // Verifica se existe uma resposta pré-definida\r\n      const preDefinedResponse = getPreDefinedResponse(userMessage);\r\n      \r\n      if (preDefinedResponse) {\r\n        // Se existe uma resposta pré-definida, usar ela diretamente (sem efeito de digitação)\r\n        setMessages((prev) => [...prev, { text: preDefinedResponse, isBot: true }]);\r\n      } else {\r\n        // Se não existe, mostrar efeito de digitação por um tempo mínimo e enviar para o backend\r\n        setIsTyping(true);\r\n        setTimeout(() => {\r\n          setIsTyping(false);\r\n          socket.current.emit('chat message', userMessage);\r\n        }, 100); // Tempo drasticamente reduzido para melhor experiência\r\n      }\r\n      \r\n      // Foco no input após enviar mensagem\r\n      setTimeout(() => {\r\n        inputRef.current?.focus();\r\n      }, 10);\r\n    }\r\n  };\r\n  \r\n  const handleQuickSuggestion = (suggestion) => {\r\n    setInput(suggestion);\r\n    // Usar setTimeout para garantir que o navegador atualize o estado corretamente\r\n    setTimeout(() => {\r\n      handleSend();\r\n    }, 10);\r\n  };\r\n  \r\n  const handleReset = () => {\r\n    setMessages([{ text: WELCOME_MESSAGE, isBot: true }]);\r\n  };\r\n\r\n  return (\r\n    <Paper \r\n      elevation={3} \r\n      sx={{\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n        borderRadius: 2\r\n      }}\r\n    >\r\n      <Box sx={{ \r\n        p: 2, \r\n        bgcolor: 'primary.dark', \r\n        color: 'primary.contrastText',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n      }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <Box\r\n            component=\"img\"\r\n            src=\"/ecobot-logo.png\"\r\n            alt=\"EcoBot Logo\"\r\n            sx={{\r\n              height: 40,\r\n              width: 'auto',\r\n              objectFit: 'contain',\r\n              mr: 1\r\n            }}\r\n          />\r\n        </Box>\r\n        <Tooltip title=\"Reiniciar conversa\">\r\n          <IconButton \r\n            color=\"inherit\" \r\n            onClick={handleReset}\r\n            size=\"small\"\r\n          >\r\n            <RestartAltIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <Divider />\r\n      \r\n      <List sx={{ \r\n        flex: 1, \r\n        overflow: 'auto', \r\n        p: 3,\r\n        bgcolor: '#f8f8f8' \r\n      }}>\r\n        {messages.map((message, index) => (\r\n          <Zoom \r\n            in={true} \r\n            key={index} \r\n            style={{ \r\n              transitionDelay: '0ms',\r\n              transitionDuration: '50ms'\r\n            }}\r\n          >\r\n            <ListItem \r\n              sx={{ \r\n                justifyContent: message.isBot ? 'flex-start' : 'flex-end',\r\n                mb: 2.5\r\n              }}\r\n            >\r\n              <Box \r\n                sx={{ \r\n                  display: 'flex', \r\n                  flexDirection: message.isBot ? 'row' : 'row-reverse',\r\n                  alignItems: 'flex-start',\r\n                  maxWidth: '90%'\r\n                }}\r\n              >\r\n                <Avatar \r\n                  sx={{ \r\n                    bgcolor: message.isBot ? 'primary.dark' : 'secondary.dark',\r\n                    width: 42,\r\n                    height: 42,\r\n                    mr: message.isBot ? 1.5 : 0,\r\n                    ml: message.isBot ? 0 : 1.5\r\n                  }}\r\n                >\r\n                  {message.isBot ? <SmartToyIcon /> : <PersonIcon />}\r\n                </Avatar>\r\n                <Paper \r\n                  elevation={3}\r\n                  sx={{ \r\n                    p: 2.5, \r\n                    borderRadius: 3,\r\n                    bgcolor: message.isBot ? 'white' : '#00695c',\r\n                    color: message.isBot ? 'text.primary' : 'white',\r\n                    whiteSpace: 'pre-wrap',\r\n                    boxShadow: 3,\r\n                    border: message.isBot ? '1px solid #e0e0e0' : 'none'\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" sx={{ \r\n                    fontSize: '1.2rem', \r\n                    lineHeight: 1.8, \r\n                    fontWeight: 500,\r\n                    letterSpacing: '0.01em'\r\n                  }}>\r\n                    {message.text}\r\n                  </Typography>\r\n                </Paper>\r\n              </Box>\r\n            </ListItem>\r\n          </Zoom>\r\n        ))}\r\n        \r\n        {isTyping && (\r\n          <Fade in={isTyping} timeout={50}>\r\n            <ListItem sx={{ justifyContent: 'flex-start' }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', maxWidth: '90%' }}>\r\n                <Avatar \r\n                  sx={{ \r\n                    bgcolor: 'primary.dark',\r\n                    width: 42,\r\n                    height: 42,\r\n                    mr: 1.5 \r\n                  }}\r\n                >\r\n                  <SmartToyIcon />\r\n                </Avatar>\r\n                <Paper elevation={3} sx={{ p: 2.5, borderRadius: 3, border: '1px solid #e0e0e0' }}>\r\n                  <CircularProgress size={28} thickness={4} />\r\n                </Paper>\r\n              </Box>\r\n            </ListItem>\r\n          </Fade>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </List>\r\n      \r\n      <Box sx={{ p: 2.5, bgcolor: 'white', borderTop: '1px solid #e0e0e0' }}>\r\n        <Box sx={{ mb: 2, display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n          {QUICK_SUGGESTIONS.map((suggestion, index) => (\r\n            <Chip\r\n              key={index}\r\n              label={suggestion}\r\n              clickable\r\n              color=\"primary\"\r\n              variant=\"filled\"\r\n              onClick={() => handleQuickSuggestion(suggestion)}\r\n              icon={<LightbulbIcon />}\r\n              sx={{ \r\n                '&:hover': { bgcolor: 'primary.dark', color: 'white' },\r\n                fontSize: '1rem',\r\n                height: 42,\r\n                borderRadius: 4,\r\n                mb: 1,\r\n                fontWeight: 600,\r\n                color: 'white',\r\n                bgcolor: 'primary.main',\r\n                maxWidth: '100%',\r\n                '& .MuiChip-label': {\r\n                  overflow: 'visible',\r\n                  whiteSpace: 'normal',\r\n                  textAlign: 'left',\r\n                  display: 'block',\r\n                  paddingLeft: 1,\r\n                  paddingRight: 1\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n        \r\n        <form onSubmit={handleSend} style={{ display: 'flex' }}>\r\n          <TextField\r\n            fullWidth\r\n            placeholder=\"Pergunte sobre sustentabilidade digital...\"\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            inputRef={inputRef}\r\n            autoFocus\r\n            sx={{ \r\n              '& .MuiOutlinedInput-root': { \r\n                borderRadius: 3,\r\n                fontSize: '1.1rem',\r\n                backgroundColor: '#f8f8f8'\r\n              }\r\n            }}\r\n          />\r\n          <IconButton \r\n            color=\"primary\" \r\n            type=\"submit\" \r\n            sx={{ \r\n              ml: 1.5, \r\n              width: 54, \r\n              height: 54,\r\n              bgcolor: 'primary.main',\r\n              color: 'white',\r\n              '&:hover': {\r\n                bgcolor: 'primary.dark'\r\n              },\r\n              '&.Mui-disabled': {\r\n                bgcolor: 'grey.300',\r\n                color: 'grey.500'\r\n              }\r\n            }} \r\n            disabled={!input.trim()}\r\n          >\r\n            <SendIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n        </form>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}